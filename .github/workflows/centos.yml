name: CentOS

on:
    push:
        branches: [ main ]
        paths-ignore:
            - AUTHORS.md
            - CC-BY-4.0.txt
            - CHANGES.md
            - CODE_OF_CONDUCT.md
            - CONTRIBUTING.md
            - COPYING
            - COPYING.LIB
            - HISTORY
            - LICENSE-2.0.txt
            - MISSING
            - MIT.txt
            - README.md
            - RELEASE
            - TODO
            - 'contrib/**'
            - 'data/**'
            - 'doc/**'
            - 'po/**'
            - 'regress/**'

jobs:
    centos:
        # Use containers on their ubuntu latest image
        runs-on: ubuntu-latest

        # Set up the matrix of distributions to test
        strategy:
            matrix:
                container: ["quay.io/centos/centos:stream9"]

        # CentOS images come from quay.io now
        container:
            image: ${{ matrix.container }}
            credentials:
                username: ${{ secrets.QUAY_IO_USERNAME }}
                password: ${{ secrets.QUAY_IO_PASSWORD }}

        # All of these steps run from within the main source
        # directory, so think of that as your $PWD
        steps:
            # Requirements before the git clone can happen
            - name: git clone requirements
              run: |
                  case "${{ matrix.container }}" in
                      *stream9)
                          dnf install -y 'dnf-command(config-manager)'
                          dnf config-manager --set-enabled crb
                          dnf install -y epel-release git
                          ;;
                  esac


            # This means clone the git repo
            - uses: actions/checkout@v4

            # Within the container, install the dependencies, build,
            # and run the test suite
            - name: Build and run the test suite
              run: |
                  # Install make(1) so we can use the instreqs target
                  dnf install -y make

                  # Install build dependencies and set up the target
                  make instreqs

                  # Build and run the test suite
                  make debug
                  make check

                  # Report coverage
                  ninja -C build coverage && ( curl -s https://codecov.io/bash | bash ) || :
