name: CentOS

on:
    push:
        branches: [ main ]
        paths-ignore:
        - AUTHORS.md
        - CC-BY-4.0.txt
        - CODE_OF_CONDUCT.md
        - COPYING
        - COPYING.LIB
        - HISTORY
        - LICENSE-2.0.txt
        - MISSING
        - README.md
        - TODO
        - 'contrib/**'
        - 'data/**'
        - 'doc/**'
        - 'po/**'
        - 'regress/**'

jobs:
    centos:
        # Use containers on their ubuntu latest image
        runs-on: ubuntu-latest

        # Set up the matrix of distributions to test
        strategy:
            matrix:
                container: ["quay.io/centos/centos:stream9",
                            "quay.io/centos/centos:stream8",
                            "quay.io/centos/centos:centos7"]

        # CentOS images come from quay.io now
        container:
            image: ${{ matrix.container }}
            credentials:
                username: ${{ secrets.QUAY_IO_USERNAME }}
                password: ${{ secrets.QUAY_IO_PASSWORD }}

        # All of these steps run from within the main source
        # directory, so think of that as your $PWD
        steps:
            # Requirements before the git clone can happen
            - name: git clone requirements
              run: |
                  case "${{ matrix.container }}" in
                      *stream9)
                          dnf install -y 'dnf-command(config-manager)'
                          dnf config-manager --set-enabled crb
                          dnf install -y epel-release git
                          ;;
                      *stream8)
                          dnf install -y epel-release git
                          ;;
                      *centos7)
                          yum install -y epel-release git
                          ;;
                  esac

                  git config --global --add safe.directory /__w/rpminspect/rpminspect

            # This means clone the git repo
            - uses: actions/checkout@v3

            # Within the container, install the dependencies, build,
            # and run the test suite
            - name: Build and run the test suite
              run: |
                  # Install make(1) so we can use the instreqs target
                  case "${{ matrix.container }}" in
                      *stream8|*stream9)
                          dnf install -y make
                          ;;
                      *centos7)
                          yum install -y make
                          ;;
                  esac

                  # Install build dependencies and set up the target
                  make instreqs

                  # Build and run the test suite
                  case "${{ matrix.container }}" in
                      *stream8|*stream9)
                          make debug
                          make check
                          ;;

                      *centos7)
                          # Make sure /usr/local is in the PATH
                          export PATH=${PATH}:/usr/local/bin

                          # Make sure to use the specific newer Python
                          PYTHON_PROG="$(cd /usr/local/bin ; ls -1 python*.* | grep -v config)"

                          # rpminspect uses variadic macros, which
                          # were introduced with C99.  CentOS 7's gcc
                          # does not default to C99 as the standard.
                          make debug PYTHON="${PYTHON_PROG}" CFLAGS="-std=c99"
                          env LANG=en_US.UTF-8 make check PYTHON="${PYTHON_PROG}"
                          ;;
                  esac

                  # Report coverage
                  ninja -C build coverage && ( curl -s https://codecov.io/bash | bash ) || :
