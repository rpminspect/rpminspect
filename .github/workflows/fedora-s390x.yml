name: Fedora Linux s390x

on:
    push:
        branches: [ main ]
        paths-ignore:
            - AUTHORS.md
            - CC-BY-4.0.txt
            - CHANGES.md
            - CODE_OF_CONDUCT.md
            - CONTRIBUTING.md
            - COPYING
            - COPYING.LIB
            - HISTORY
            - LICENSE-2.0.txt
            - MISSING
            - MIT.txt
            - README.md
            - RELEASE
            - TODO
            - 'contrib/**'
            - 'data/**'
            - 'doc/**'
            - 'po/**'
            - 'regress/**'

jobs:
    # Non-x86_64 architectures for Fedora, Ubuntu, Debian, Arch, and Alpine
    # https://github.com/uraimo/run-on-arch-action
    emulated:
        # GitHub Actions offers Ubuntu to run the job.
        runs-on: ubuntu-latest

        # Run steps on a matrix of arch/distro combinations
        strategy:
            matrix:
                arch: ["s390x"]
                distro: ["fedora_latest"]

        # All of these steps run from within the main source
        # directory, so think of that as your $PWD
        # NOTE: Pinned action version v2.7.0 because 2.7.1 removes fedora s390x
        steps:
            # This means clone the git repo
            - uses: actions/checkout@v4
            - uses: uraimo/run-on-arch-action@v2.7.0
              id: buildtest
              timeout-minutes: 500
              with:
                  arch: ${{ matrix.arch }}
                  distro: ${{ matrix.distro }}
                  githubToken: ${{ github.token }}

                  # The shell to run commands with in the container
                  shell: /bin/sh

                  # Within the container, install the dependencies
                  # required to use our Makefile
                  install: |
                      case "${{ matrix.distro }}" in
                          fedora*)
                              dnf remove -y fedora-repos-modular
                              dnf install -y make
                              ;;
                          debian*|buster|stretch|jessie)
                              apt-get update
                              apt-get -y install make
                              ;;
                      esac

                  # Build the software but skip the test.  The test
                  # suite takes way too long to run in the emulated
                  # environment.  If you want to run it in this
                  # emulated environment, you need to do it this way:
                  #
                  #    /bin/ls -1 test/test_*.py | while read tname ; do
                  #        tname="$(basename ${tname} .py | cut -d '_' -f 2)"
                  #        make check ${tname} || exit 1
                  #    done
                  #    curl -s https://codecov.io/bash | bash
                  #
                  run: |
                      make instreqs SKIP_PIP=y
                      make MESON_OPTIONS="-D with_system_libtoml=true"
