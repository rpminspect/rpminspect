name: CentOS 7

on:
    push:
        branches: [ main ]
        paths-ignore:
            - AUTHORS.md
            - CC-BY-4.0.txt
            - CHANGES.md
            - CODE_OF_CONDUCT.md
            - CONTRIBUTING.md
            - COPYING
            - COPYING.LIB
            - HISTORY
            - LICENSE-2.0.txt
            - MISSING
            - MIT.txt
            - README.md
            - RELEASE
            - TODO
            - 'contrib/**'
            - 'data/**'
            - 'doc/**'
            - 'po/**'
            - 'regress/**'

jobs:
    centos:
        # Use containers on their ubuntu latest image
        runs-on: ubuntu-latest

        # Set up the matrix of distributions to test
        strategy:
            matrix:
                container: ["quay.io/centos/centos:centos7"]

        # CentOS images come from quay.io now
        container:
            image: ${{ matrix.container }}
            credentials:
                username: ${{ secrets.QUAY_IO_USERNAME }}
                password: ${{ secrets.QUAY_IO_PASSWORD }}

        # All of these steps run from within the main source
        # directory, so think of that as your $PWD
        steps:
            # CentOS 7 is EOL, so fix the yum configuration
            - name: yum repo configuration
              run: |
                  CONF="/etc/yum.repos.d/centos7.repo"
                  BASEURL="http://archive.kernel.org/centos-vault/7.9.2009"

                  echo "[base]" > ${CONF}
                  echo "name=CentOS 7 - Base" >> ${CONF}
                  echo "baseurl=${BASEURL}/os/\$basearch/" >> ${CONF}
                  echo "enabled=1" >> ${CONF}
                  echo "gpgcheck=1" >> ${CONF}
                  echo "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7" >> ${CONF}

                  echo >> ${CONF}
                  echo "[updates]" >> ${CONF}
                  echo "name=CentOS 7 - Updates" >> ${CONF}
                  echo "baseurl=${BASEURL}/updates/\$basearch/" >> ${CONF}
                  echo "enabled=1" >> ${CONF}
                  echo "gpgcheck=1" >> ${CONF}
                  echo "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7" >> ${CONF}

                  echo >> ${CONF}
                  echo "[extras]" >> ${CONF}
                  echo "name=CentOS 7 - Extras" >> ${CONF}
                  echo "baseurl=${BASEURL}/extras/\$basearch/" >> ${CONF}
                  echo "enabled=1" >> ${CONF}
                  echo "gpgcheck=1" >> ${CONF}
                  echo "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7" >> ${CONF}

                  echo >> ${CONF}
                  echo "[centosplus]" >> ${CONF}
                  echo "name=CentOS 7 - Plus" >> ${CONF}
                  echo "baseurl=${BASEURL}/centosplus/\$basearch/" >> ${CONF}
                  echo "enabled=1" >> ${CONF}
                  echo "gpgcheck=1" >> ${CONF}
                  echo "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7" >> ${CONF}

            # Requirements before the git clone can happen
            - name: git clone requirements
              run: |
                  rm -f /etc/yum.repos.d/CentOS*.repo
                  rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
                  yum upgrade -y
                  rm -f /etc/yum.repos.d/CentOS*.repo
                  yum install -y epel-release git

            # This means clone the git repo
            - uses: actions/checkout@v4

            # Within the container, install the dependencies, build,
            # and run the test suite
            - name: Build and run the test suite
              run: |
                  # Install make(1) so we can use the instreqs target
                  yum install -y make

                  # Install build dependencies and set up the target
                  make instreqs

                  # Build and run the test suite
                  # Make sure /usr/local is in the PATH
                  export PATH=${PATH}:/usr/local/bin

                  # Make sure to use the specific newer Python
                  PYTHON_PROG="$(cd /usr/local/bin ; ls -1 python*.* | grep -v config)"

                  # Do a debug build and run the test suite
                  make debug PYTHON="${PYTHON_PROG}"
                  env LANG=en_US.UTF-8 make check PYTHON="${PYTHON_PROG}"

                  # Report coverage
                  ninja -C build coverage && ( curl -s https://codecov.io/bash | bash ) || :
